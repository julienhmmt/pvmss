apiVersion: v1
kind: Namespace
metadata:
  name: pvmss
---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: pvmss-sa
  namespace: pvmss
---
apiVersion: v1
kind: Secret
metadata:
  name: pvmss-secrets
type: Opaque
data:
  admin-password: changemebase64hash
  pve-api-token: changemebase64hash
  session-secret: changemebase64hash
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pvmss-config
data:
  settings.json: |
    {
        "tags": [
            "pvmss"
        ],
        "isos": [],
        "vmbrs": [],
        "enabled_storages": [],
        "limits": {
            "nodes": {},
            "vm": {
                "cores": {
                    "min": 1,
                    "max": 4
                },
                "disk": {
                    "min": 6,
                    "max": 12
                },
                "ram": {
                    "min": 1,
                    "max": 4
                },
                "sockets": {
                    "min": 1,
                    "max": 1
                }
            }
        }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvmss-settings-pvc
  namespace: pvmss
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""  # Use default storage class
---
kind: Deployment
metadata:
  name: pvmss
  namespace: pvmss
labels:
  app.kubernetes.io/name: pvmss
  app.kubernetes.io/instance: pvmss
  app.kubernetes.io/version: 0.2.0
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pvmss
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pvmss
    spec:
      automountServiceAccountToken: true
      serviceAccountName: pvmss-sa
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
        - name: pvmss
          image: jhmmt/pvmss:0.2.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: backend
              containerPort: 50000
              protocol: TCP
          env:
            - name: ADMIN_PASSWORD_HASH
              valueFrom:
                secretKeyRef:
                  name: pvmss-secrets
                  key: admin-password
            - name: LOG_LEVEL
              value: "INFO"
            - name: PROXMOX_API_TOKEN_NAME
              value: "changeme"
            - name: PROXMOX_API_TOKEN_VALUE
              valueFrom:
                secretKeyRef:
                  name: pvmss-secrets
                  key: pve-api-token
            - name: PROXMOX_VERIFY_SSL
              value: "false"
            - name: PROXMOX_URL
              value: "https://changeme:8006/api2/json"
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: pvmss-secrets
                  key: session-secret
            - name: PVMSS_ENV
              value: "production" # Can be 'dev', 'developpement', 'prod'
            - name: PVMSS_OFFLINE
              value: "false" # Set to true to disable Proxmox connection
            - name: PVMSS_SETTINGS_PATH
              value: "/data/settings.json"
            - name: TZ
              value: "Europe/Paris"
          volumeMounts:
            - name: pvmss-settings
              mountPath: /data
              readOnly: false
          resources:
            requests:
              memory: "64Mi"
              cpu: "25m"
            limits:
              memory: "128Mi"
              cpu: "50m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumes:
            - name: pvmss-settings
              persistentVolumeClaim:
                claimName: pvmss-settings-pvc
---           
apiVersion: v1
kind: Service
metadata:
  name: pvmss
  namespace: pvmss
spec:
  selector:
    app.kubernetes.io/name: pvmss
    app.kubernetes.io/instance: pvmss
    app.kubernetes.io/version: 0.2.0
  ports:
    - name: backend
      protocol: TCP
      port: 50000
      targetPort: 50000
