user nginx;

worker_processes 1;

# Error log path and level
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    use epoll;
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Basic log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Basic performance settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off;
    
    # Timeouts
    keepalive_timeout 65;
    client_body_timeout 12s;
    client_header_timeout 12s;
    send_timeout 10s;
    
    # Buffer sizes
    client_body_buffer_size 16k;
    client_max_body_size 16m;
    
    # Gzip settings
    gzip on;
    gzip_http_version 1.1;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml application/xml
        application/xml+rss
        text/javascript
        application/vnd.ms-fontobject
        application/x-font-ttf
        font/opentype
        image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Root directory for static files
        root /var/www/html;
        index index.html;
        
        # Basic logging
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # Block access to hidden files and sensitive paths
        location ~* ^/(\.|git|env|package\.json) {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }

        location ~* \.(css|js)$ {
            expires 30d;
            access_log off;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
        }

        # Proxy root to backend to render the main page
        location / {
            proxy_pass http://backend:50000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
    }
}
